/* eslint-disable */

const path = require("path");
const webpack = require("webpack");

// WebSDK is not support some optional dependencies, resolve them as error
const optionals = [
  "fs",
  "path",
  "querystring",
  "readline",
  "@grpc/grpc-js",
  "archiver",
  "co-body",
  "env-paths",
  "https-proxy-agent",
  "openid-client",
  "proxy-agent",
  "proxy-from-env",
  "winston-transport-sentry-node",
];

module.exports = {
  entry: "./src/index.ts",
  devtool: "source-map",
  module: {
    rules: [
      {
        test: /\.tsx?$/,
        loader: "ts-loader",
        exclude: /node_modules/,
        options: {
          compilerOptions: {
            outDir: "./web",
          },
        },
      },
    ],
  },
  plugins: [
    new webpack.ProvidePlugin({
      process: "process",
      Buffer: [require.resolve("buffer/"), "Buffer"],
    }),
    new webpack.IgnorePlugin({
      resourceRegExp: new RegExp(`(${optionals.join("|")})$`),
    }),
  ],
  resolve: {
    // exclude some modules from websdk
    alias: {
      "./audio-client": false,
      "./grpc-api/node": false,
    },
    // winston can use it for node api, exclude for websdk
    fallback: {
      assert: require.resolve("assert/"),
      http: false,
      https: false,
      os: false,
      stream: false,
      util: require.resolve("util/"),
      zlib: false,
    },
    extensions: [".ts", ".js"],
  },
  output: {
    filename: "index.js",
    path: path.resolve(__dirname, "web"),
    library: {
      type: "commonjs",
    },
  },
};
