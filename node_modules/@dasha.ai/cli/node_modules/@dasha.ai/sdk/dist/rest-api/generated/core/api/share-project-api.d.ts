/**
 * Dasha.AI Platform API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { SharedProjectDescriptionResponseDTO } from '../models';
/**
 * ShareProjectApi - axios parameter creator
 * @export
 */
export declare const ShareProjectApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectGet: (skip?: number | undefined, take?: number | undefined, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdContentGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdDelete: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdGet: (id: string, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdPatch: (id: string, nameValue?: string | undefined, nameHasValue?: boolean | undefined, descriptionValue?: string | undefined, descriptionHasValue?: boolean | undefined, body?: any, options?: any) => Promise<RequestArgs>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectPost: (name: string, description: string, body: any, options?: any) => Promise<RequestArgs>;
};
/**
 * ShareProjectApi - functional programming interface
 * @export
 */
export declare const ShareProjectApiFp: (configuration?: Configuration | undefined) => {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectGet(skip?: number | undefined, take?: number | undefined, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<Array<SharedProjectDescriptionResponseDTO>>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdContentGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<string>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdDelete(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdGet(id: string, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdPatch(id: string, nameValue?: string | undefined, nameHasValue?: boolean | undefined, descriptionValue?: string | undefined, descriptionHasValue?: boolean | undefined, body?: any, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectPost(name: string, description: string, body: any, options?: any): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<SharedProjectDescriptionResponseDTO>>;
};
/**
 * ShareProjectApi - factory interface
 * @export
 */
export declare const ShareProjectApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectGet(skip?: number | undefined, take?: number | undefined, options?: any): AxiosPromise<Array<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdContentGet(id: string, options?: any): AxiosPromise<string>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdDelete(id: string, options?: any): AxiosPromise<SharedProjectDescriptionResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdGet(id: string, options?: any): AxiosPromise<SharedProjectDescriptionResponseDTO>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectIdPatch(id: string, nameValue?: string | undefined, nameHasValue?: boolean | undefined, descriptionValue?: string | undefined, descriptionHasValue?: boolean | undefined, body?: any, options?: any): AxiosPromise<SharedProjectDescriptionResponseDTO>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    apiV1ShareProjectPost(name: string, description: string, body: any, options?: any): AxiosPromise<SharedProjectDescriptionResponseDTO>;
};
/**
 * ShareProjectApi - object-oriented interface
 * @export
 * @class ShareProjectApi
 * @extends {BaseAPI}
 */
export declare class ShareProjectApi extends BaseAPI {
    /**
     *
     * @param {number} [skip]
     * @param {number} [take]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectGet(skip?: number, take?: number, options?: any): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO[]>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdContentGet(id: string, options?: any): Promise<import("axios").AxiosResponse<string>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdDelete(id: string, options?: any): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdGet(id: string, options?: any): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} id
     * @param {string} [nameValue]
     * @param {boolean} [nameHasValue]
     * @param {string} [descriptionValue]
     * @param {boolean} [descriptionHasValue]
     * @param {any} [body]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectIdPatch(id: string, nameValue?: string, nameHasValue?: boolean, descriptionValue?: string, descriptionHasValue?: boolean, body?: any, options?: any): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO>>;
    /**
     *
     * @param {string} name
     * @param {string} description
     * @param {any} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ShareProjectApi
     */
    apiV1ShareProjectPost(name: string, description: string, body: any, options?: any): Promise<import("axios").AxiosResponse<SharedProjectDescriptionResponseDTO>>;
}
