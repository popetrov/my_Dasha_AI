"use strict";
// source: nlu-service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();
goog.exportSymbol('proto.dasha.sdk.AvailableSkillsRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.AvailableSkillsResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.DataRecognitionV1', null, global);
goog.exportSymbol('proto.dasha.sdk.IntentRecognitionV1', null, global);
goog.exportSymbol('proto.dasha.sdk.RecognitionRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.RecognitionResponse', null, global);
goog.exportSymbol('proto.dasha.sdk.RecognitionResponseV1', null, global);
goog.exportSymbol('proto.dasha.sdk.SentenceTypeRecognitionV1', null, global);
goog.exportSymbol('proto.dasha.sdk.TrainRequest', null, global);
goog.exportSymbol('proto.dasha.sdk.TrainStatusFailed', null, global);
goog.exportSymbol('proto.dasha.sdk.TrainStatusProcessing', null, global);
goog.exportSymbol('proto.dasha.sdk.TrainStatusProcessing.SeverityEnum', null, global);
goog.exportSymbol('proto.dasha.sdk.TrainStatusReady', null, global);
goog.exportSymbol('proto.dasha.sdk.TrainStatusStream', null, global);
goog.exportSymbol('proto.dasha.sdk.TrainStatusStream.StatusCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TrainRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.TrainRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TrainRequest.displayName = 'proto.dasha.sdk.TrainRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TrainStatusStream = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.dasha.sdk.TrainStatusStream.oneofGroups_);
};
goog.inherits(proto.dasha.sdk.TrainStatusStream, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TrainStatusStream.displayName = 'proto.dasha.sdk.TrainStatusStream';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TrainStatusProcessing = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.TrainStatusProcessing.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.TrainStatusProcessing, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TrainStatusProcessing.displayName = 'proto.dasha.sdk.TrainStatusProcessing';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TrainStatusFailed = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.TrainStatusFailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TrainStatusFailed.displayName = 'proto.dasha.sdk.TrainStatusFailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.TrainStatusReady = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.TrainStatusReady, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.TrainStatusReady.displayName = 'proto.dasha.sdk.TrainStatusReady';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RecognitionRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.RecognitionRequest.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.RecognitionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RecognitionRequest.displayName = 'proto.dasha.sdk.RecognitionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RecognitionResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.RecognitionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RecognitionResponse.displayName = 'proto.dasha.sdk.RecognitionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.RecognitionResponseV1 = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.RecognitionResponseV1.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.RecognitionResponseV1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.RecognitionResponseV1.displayName = 'proto.dasha.sdk.RecognitionResponseV1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.SentenceTypeRecognitionV1 = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.SentenceTypeRecognitionV1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.SentenceTypeRecognitionV1.displayName = 'proto.dasha.sdk.SentenceTypeRecognitionV1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.DataRecognitionV1 = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.DataRecognitionV1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.DataRecognitionV1.displayName = 'proto.dasha.sdk.DataRecognitionV1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.IntentRecognitionV1 = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.IntentRecognitionV1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.IntentRecognitionV1.displayName = 'proto.dasha.sdk.IntentRecognitionV1';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.AvailableSkillsRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dasha.sdk.AvailableSkillsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.AvailableSkillsRequest.displayName = 'proto.dasha.sdk.AvailableSkillsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dasha.sdk.AvailableSkillsResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, proto.dasha.sdk.AvailableSkillsResponse.repeatedFields_, null);
};
goog.inherits(proto.dasha.sdk.AvailableSkillsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.dasha.sdk.AvailableSkillsResponse.displayName = 'proto.dasha.sdk.AvailableSkillsResponse';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TrainRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TrainRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TrainRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TrainRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            dataset: msg.getDataset_asB64(),
            language: jspb.Message.getFieldWithDefault(msg, 2, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TrainRequest}
 */
proto.dasha.sdk.TrainRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TrainRequest;
    return proto.dasha.sdk.TrainRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TrainRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TrainRequest}
 */
proto.dasha.sdk.TrainRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {!Uint8Array} */ (reader.readBytes());
                msg.setDataset(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLanguage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TrainRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TrainRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TrainRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TrainRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getDataset_asU8();
    if (f.length > 0) {
        writer.writeBytes(1, f);
    }
    f = message.getLanguage();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
};
/**
 * optional bytes dataset = 1;
 * @return {!(string|Uint8Array)}
 */
proto.dasha.sdk.TrainRequest.prototype.getDataset = function () {
    return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * optional bytes dataset = 1;
 * This is a type-conversion wrapper around `getDataset()`
 * @return {string}
 */
proto.dasha.sdk.TrainRequest.prototype.getDataset_asB64 = function () {
    return /** @type {string} */ (jspb.Message.bytesAsB64(this.getDataset()));
};
/**
 * optional bytes dataset = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataset()`
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TrainRequest.prototype.getDataset_asU8 = function () {
    return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(this.getDataset()));
};
/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.dasha.sdk.TrainRequest} returns this
 */
proto.dasha.sdk.TrainRequest.prototype.setDataset = function (value) {
    return jspb.Message.setProto3BytesField(this, 1, value);
};
/**
 * optional string language = 2;
 * @return {string}
 */
proto.dasha.sdk.TrainRequest.prototype.getLanguage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TrainRequest} returns this
 */
proto.dasha.sdk.TrainRequest.prototype.setLanguage = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.dasha.sdk.TrainStatusStream.oneofGroups_ = [[1, 2, 3]];
/**
 * @enum {number}
 */
proto.dasha.sdk.TrainStatusStream.StatusCase = {
    STATUS_NOT_SET: 0,
    FAILED: 1,
    PROCESSING: 2,
    READY: 3
};
/**
 * @return {proto.dasha.sdk.TrainStatusStream.StatusCase}
 */
proto.dasha.sdk.TrainStatusStream.prototype.getStatusCase = function () {
    return /** @type {proto.dasha.sdk.TrainStatusStream.StatusCase} */ (jspb.Message.computeOneofCase(this, proto.dasha.sdk.TrainStatusStream.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TrainStatusStream.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TrainStatusStream.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TrainStatusStream} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TrainStatusStream.toObject = function (includeInstance, msg) {
        var f, obj = {
            failed: (f = msg.getFailed()) && proto.dasha.sdk.TrainStatusFailed.toObject(includeInstance, f),
            processing: (f = msg.getProcessing()) && proto.dasha.sdk.TrainStatusProcessing.toObject(includeInstance, f),
            ready: (f = msg.getReady()) && proto.dasha.sdk.TrainStatusReady.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TrainStatusStream}
 */
proto.dasha.sdk.TrainStatusStream.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TrainStatusStream;
    return proto.dasha.sdk.TrainStatusStream.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TrainStatusStream} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TrainStatusStream}
 */
proto.dasha.sdk.TrainStatusStream.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.TrainStatusFailed;
                reader.readMessage(value, proto.dasha.sdk.TrainStatusFailed.deserializeBinaryFromReader);
                msg.setFailed(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.TrainStatusProcessing;
                reader.readMessage(value, proto.dasha.sdk.TrainStatusProcessing.deserializeBinaryFromReader);
                msg.setProcessing(value);
                break;
            case 3:
                var value = new proto.dasha.sdk.TrainStatusReady;
                reader.readMessage(value, proto.dasha.sdk.TrainStatusReady.deserializeBinaryFromReader);
                msg.setReady(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TrainStatusStream.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TrainStatusStream.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TrainStatusStream} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TrainStatusStream.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getFailed();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.TrainStatusFailed.serializeBinaryToWriter);
    }
    f = message.getProcessing();
    if (f != null) {
        writer.writeMessage(2, f, proto.dasha.sdk.TrainStatusProcessing.serializeBinaryToWriter);
    }
    f = message.getReady();
    if (f != null) {
        writer.writeMessage(3, f, proto.dasha.sdk.TrainStatusReady.serializeBinaryToWriter);
    }
};
/**
 * optional TrainStatusFailed failed = 1;
 * @return {?proto.dasha.sdk.TrainStatusFailed}
 */
proto.dasha.sdk.TrainStatusStream.prototype.getFailed = function () {
    return /** @type{?proto.dasha.sdk.TrainStatusFailed} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.TrainStatusFailed, 1));
};
/**
 * @param {?proto.dasha.sdk.TrainStatusFailed|undefined} value
 * @return {!proto.dasha.sdk.TrainStatusStream} returns this
*/
proto.dasha.sdk.TrainStatusStream.prototype.setFailed = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.dasha.sdk.TrainStatusStream.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.TrainStatusStream} returns this
 */
proto.dasha.sdk.TrainStatusStream.prototype.clearFailed = function () {
    return this.setFailed(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.TrainStatusStream.prototype.hasFailed = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional TrainStatusProcessing processing = 2;
 * @return {?proto.dasha.sdk.TrainStatusProcessing}
 */
proto.dasha.sdk.TrainStatusStream.prototype.getProcessing = function () {
    return /** @type{?proto.dasha.sdk.TrainStatusProcessing} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.TrainStatusProcessing, 2));
};
/**
 * @param {?proto.dasha.sdk.TrainStatusProcessing|undefined} value
 * @return {!proto.dasha.sdk.TrainStatusStream} returns this
*/
proto.dasha.sdk.TrainStatusStream.prototype.setProcessing = function (value) {
    return jspb.Message.setOneofWrapperField(this, 2, proto.dasha.sdk.TrainStatusStream.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.TrainStatusStream} returns this
 */
proto.dasha.sdk.TrainStatusStream.prototype.clearProcessing = function () {
    return this.setProcessing(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.TrainStatusStream.prototype.hasProcessing = function () {
    return jspb.Message.getField(this, 2) != null;
};
/**
 * optional TrainStatusReady ready = 3;
 * @return {?proto.dasha.sdk.TrainStatusReady}
 */
proto.dasha.sdk.TrainStatusStream.prototype.getReady = function () {
    return /** @type{?proto.dasha.sdk.TrainStatusReady} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.TrainStatusReady, 3));
};
/**
 * @param {?proto.dasha.sdk.TrainStatusReady|undefined} value
 * @return {!proto.dasha.sdk.TrainStatusStream} returns this
*/
proto.dasha.sdk.TrainStatusStream.prototype.setReady = function (value) {
    return jspb.Message.setOneofWrapperField(this, 3, proto.dasha.sdk.TrainStatusStream.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.TrainStatusStream} returns this
 */
proto.dasha.sdk.TrainStatusStream.prototype.clearReady = function () {
    return this.setReady(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.TrainStatusStream.prototype.hasReady = function () {
    return jspb.Message.getField(this, 3) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.TrainStatusProcessing.repeatedFields_ = [3];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TrainStatusProcessing.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TrainStatusProcessing.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TrainStatusProcessing} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TrainStatusProcessing.toObject = function (includeInstance, msg) {
        var f, obj = {
            percent: jspb.Message.getFieldWithDefault(msg, 1, 0),
            stageDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
            stageScopeList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
            extraInfoJson: jspb.Message.getFieldWithDefault(msg, 4, ""),
            severity: jspb.Message.getFieldWithDefault(msg, 5, 0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TrainStatusProcessing}
 */
proto.dasha.sdk.TrainStatusProcessing.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TrainStatusProcessing;
    return proto.dasha.sdk.TrainStatusProcessing.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TrainStatusProcessing} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TrainStatusProcessing}
 */
proto.dasha.sdk.TrainStatusProcessing.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {number} */ (reader.readUint32());
                msg.setPercent(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setStageDescription(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.addStageScope(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setExtraInfoJson(value);
                break;
            case 5:
                var value = /** @type {!proto.dasha.sdk.TrainStatusProcessing.SeverityEnum} */ (reader.readEnum());
                msg.setSeverity(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TrainStatusProcessing.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TrainStatusProcessing} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TrainStatusProcessing.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getPercent();
    if (f !== 0) {
        writer.writeUint32(1, f);
    }
    f = message.getStageDescription();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getStageScopeList();
    if (f.length > 0) {
        writer.writeRepeatedString(3, f);
    }
    f = message.getExtraInfoJson();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getSeverity();
    if (f !== 0.0) {
        writer.writeEnum(5, f);
    }
};
/**
 * @enum {number}
 */
proto.dasha.sdk.TrainStatusProcessing.SeverityEnum = {
    TRACE: 0,
    DEBUG: 1,
    INFORMATION: 2,
    WARNING: 3,
    ERROR: 4,
    CRITICAL: 5,
    NONE: 6
};
/**
 * optional uint32 percent = 1;
 * @return {number}
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.getPercent = function () {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.TrainStatusProcessing} returns this
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.setPercent = function (value) {
    return jspb.Message.setProto3IntField(this, 1, value);
};
/**
 * optional string stage_description = 2;
 * @return {string}
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.getStageDescription = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TrainStatusProcessing} returns this
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.setStageDescription = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * repeated string stage_scope = 3;
 * @return {!Array<string>}
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.getStageScopeList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dasha.sdk.TrainStatusProcessing} returns this
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.setStageScopeList = function (value) {
    return jspb.Message.setField(this, 3, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.TrainStatusProcessing} returns this
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.addStageScope = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.TrainStatusProcessing} returns this
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.clearStageScopeList = function () {
    return this.setStageScopeList([]);
};
/**
 * optional string extra_info_json = 4;
 * @return {string}
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.getExtraInfoJson = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TrainStatusProcessing} returns this
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.setExtraInfoJson = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional SeverityEnum severity = 5;
 * @return {!proto.dasha.sdk.TrainStatusProcessing.SeverityEnum}
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.getSeverity = function () {
    return /** @type {!proto.dasha.sdk.TrainStatusProcessing.SeverityEnum} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};
/**
 * @param {!proto.dasha.sdk.TrainStatusProcessing.SeverityEnum} value
 * @return {!proto.dasha.sdk.TrainStatusProcessing} returns this
 */
proto.dasha.sdk.TrainStatusProcessing.prototype.setSeverity = function (value) {
    return jspb.Message.setProto3EnumField(this, 5, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TrainStatusFailed.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TrainStatusFailed.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TrainStatusFailed} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TrainStatusFailed.toObject = function (includeInstance, msg) {
        var f, obj = {
            reason: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TrainStatusFailed}
 */
proto.dasha.sdk.TrainStatusFailed.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TrainStatusFailed;
    return proto.dasha.sdk.TrainStatusFailed.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TrainStatusFailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TrainStatusFailed}
 */
proto.dasha.sdk.TrainStatusFailed.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setReason(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TrainStatusFailed.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TrainStatusFailed.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TrainStatusFailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TrainStatusFailed.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getReason();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string reason = 1;
 * @return {string}
 */
proto.dasha.sdk.TrainStatusFailed.prototype.getReason = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TrainStatusFailed} returns this
 */
proto.dasha.sdk.TrainStatusFailed.prototype.setReason = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.TrainStatusReady.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.TrainStatusReady.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.TrainStatusReady} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.TrainStatusReady.toObject = function (includeInstance, msg) {
        var f, obj = {
            skillId: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.TrainStatusReady}
 */
proto.dasha.sdk.TrainStatusReady.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.TrainStatusReady;
    return proto.dasha.sdk.TrainStatusReady.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.TrainStatusReady} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.TrainStatusReady}
 */
proto.dasha.sdk.TrainStatusReady.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setSkillId(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.TrainStatusReady.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.TrainStatusReady.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.TrainStatusReady} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.TrainStatusReady.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSkillId();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string skill_id = 1;
 * @return {string}
 */
proto.dasha.sdk.TrainStatusReady.prototype.getSkillId = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.TrainStatusReady} returns this
 */
proto.dasha.sdk.TrainStatusReady.prototype.setSkillId = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.RecognitionRequest.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RecognitionRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RecognitionRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RecognitionRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RecognitionRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            skillIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
            language: jspb.Message.getFieldWithDefault(msg, 2, ""),
            text: jspb.Message.getFieldWithDefault(msg, 3, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RecognitionRequest}
 */
proto.dasha.sdk.RecognitionRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RecognitionRequest;
    return proto.dasha.sdk.RecognitionRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RecognitionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RecognitionRequest}
 */
proto.dasha.sdk.RecognitionRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addSkillIds(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setLanguage(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setText(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RecognitionRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RecognitionRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RecognitionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RecognitionRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getSkillIdsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
    f = message.getLanguage();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getText();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
};
/**
 * repeated string skill_ids = 1;
 * @return {!Array<string>}
 */
proto.dasha.sdk.RecognitionRequest.prototype.getSkillIdsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dasha.sdk.RecognitionRequest} returns this
 */
proto.dasha.sdk.RecognitionRequest.prototype.setSkillIdsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.RecognitionRequest} returns this
 */
proto.dasha.sdk.RecognitionRequest.prototype.addSkillIds = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.RecognitionRequest} returns this
 */
proto.dasha.sdk.RecognitionRequest.prototype.clearSkillIdsList = function () {
    return this.setSkillIdsList([]);
};
/**
 * optional string language = 2;
 * @return {string}
 */
proto.dasha.sdk.RecognitionRequest.prototype.getLanguage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RecognitionRequest} returns this
 */
proto.dasha.sdk.RecognitionRequest.prototype.setLanguage = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string text = 3;
 * @return {string}
 */
proto.dasha.sdk.RecognitionRequest.prototype.getText = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.RecognitionRequest} returns this
 */
proto.dasha.sdk.RecognitionRequest.prototype.setText = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RecognitionResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RecognitionResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RecognitionResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RecognitionResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            v1: (f = msg.getV1()) && proto.dasha.sdk.RecognitionResponseV1.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RecognitionResponse}
 */
proto.dasha.sdk.RecognitionResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RecognitionResponse;
    return proto.dasha.sdk.RecognitionResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RecognitionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RecognitionResponse}
 */
proto.dasha.sdk.RecognitionResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.RecognitionResponseV1;
                reader.readMessage(value, proto.dasha.sdk.RecognitionResponseV1.deserializeBinaryFromReader);
                msg.setV1(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RecognitionResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RecognitionResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RecognitionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RecognitionResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getV1();
    if (f != null) {
        writer.writeMessage(1, f, proto.dasha.sdk.RecognitionResponseV1.serializeBinaryToWriter);
    }
};
/**
 * optional RecognitionResponseV1 v1 = 1;
 * @return {?proto.dasha.sdk.RecognitionResponseV1}
 */
proto.dasha.sdk.RecognitionResponse.prototype.getV1 = function () {
    return /** @type{?proto.dasha.sdk.RecognitionResponseV1} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.RecognitionResponseV1, 1));
};
/**
 * @param {?proto.dasha.sdk.RecognitionResponseV1|undefined} value
 * @return {!proto.dasha.sdk.RecognitionResponse} returns this
*/
proto.dasha.sdk.RecognitionResponse.prototype.setV1 = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.RecognitionResponse} returns this
 */
proto.dasha.sdk.RecognitionResponse.prototype.clearV1 = function () {
    return this.setV1(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.RecognitionResponse.prototype.hasV1 = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.RecognitionResponseV1.repeatedFields_ = [1, 2];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.RecognitionResponseV1.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.RecognitionResponseV1.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.RecognitionResponseV1} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.RecognitionResponseV1.toObject = function (includeInstance, msg) {
        var f, obj = {
            dataRecognitionsList: jspb.Message.toObjectList(msg.getDataRecognitionsList(), proto.dasha.sdk.DataRecognitionV1.toObject, includeInstance),
            intentRecognitionsList: jspb.Message.toObjectList(msg.getIntentRecognitionsList(), proto.dasha.sdk.IntentRecognitionV1.toObject, includeInstance),
            sentenceType: (f = msg.getSentenceType()) && proto.dasha.sdk.SentenceTypeRecognitionV1.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.RecognitionResponseV1}
 */
proto.dasha.sdk.RecognitionResponseV1.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.RecognitionResponseV1;
    return proto.dasha.sdk.RecognitionResponseV1.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.RecognitionResponseV1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.RecognitionResponseV1}
 */
proto.dasha.sdk.RecognitionResponseV1.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.dasha.sdk.DataRecognitionV1;
                reader.readMessage(value, proto.dasha.sdk.DataRecognitionV1.deserializeBinaryFromReader);
                msg.addDataRecognitions(value);
                break;
            case 2:
                var value = new proto.dasha.sdk.IntentRecognitionV1;
                reader.readMessage(value, proto.dasha.sdk.IntentRecognitionV1.deserializeBinaryFromReader);
                msg.addIntentRecognitions(value);
                break;
            case 3:
                var value = new proto.dasha.sdk.SentenceTypeRecognitionV1;
                reader.readMessage(value, proto.dasha.sdk.SentenceTypeRecognitionV1.deserializeBinaryFromReader);
                msg.setSentenceType(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.RecognitionResponseV1.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.RecognitionResponseV1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.RecognitionResponseV1.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getDataRecognitionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(1, f, proto.dasha.sdk.DataRecognitionV1.serializeBinaryToWriter);
    }
    f = message.getIntentRecognitionsList();
    if (f.length > 0) {
        writer.writeRepeatedMessage(2, f, proto.dasha.sdk.IntentRecognitionV1.serializeBinaryToWriter);
    }
    f = message.getSentenceType();
    if (f != null) {
        writer.writeMessage(3, f, proto.dasha.sdk.SentenceTypeRecognitionV1.serializeBinaryToWriter);
    }
};
/**
 * repeated DataRecognitionV1 data_recognitions = 1;
 * @return {!Array<!proto.dasha.sdk.DataRecognitionV1>}
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.getDataRecognitionsList = function () {
    return /** @type{!Array<!proto.dasha.sdk.DataRecognitionV1>} */ (jspb.Message.getRepeatedWrapperField(this, proto.dasha.sdk.DataRecognitionV1, 1));
};
/**
 * @param {!Array<!proto.dasha.sdk.DataRecognitionV1>} value
 * @return {!proto.dasha.sdk.RecognitionResponseV1} returns this
*/
proto.dasha.sdk.RecognitionResponseV1.prototype.setDataRecognitionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 1, value);
};
/**
 * @param {!proto.dasha.sdk.DataRecognitionV1=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.DataRecognitionV1}
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.addDataRecognitions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dasha.sdk.DataRecognitionV1, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.RecognitionResponseV1} returns this
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.clearDataRecognitionsList = function () {
    return this.setDataRecognitionsList([]);
};
/**
 * repeated IntentRecognitionV1 intent_recognitions = 2;
 * @return {!Array<!proto.dasha.sdk.IntentRecognitionV1>}
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.getIntentRecognitionsList = function () {
    return /** @type{!Array<!proto.dasha.sdk.IntentRecognitionV1>} */ (jspb.Message.getRepeatedWrapperField(this, proto.dasha.sdk.IntentRecognitionV1, 2));
};
/**
 * @param {!Array<!proto.dasha.sdk.IntentRecognitionV1>} value
 * @return {!proto.dasha.sdk.RecognitionResponseV1} returns this
*/
proto.dasha.sdk.RecognitionResponseV1.prototype.setIntentRecognitionsList = function (value) {
    return jspb.Message.setRepeatedWrapperField(this, 2, value);
};
/**
 * @param {!proto.dasha.sdk.IntentRecognitionV1=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.IntentRecognitionV1}
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.addIntentRecognitions = function (opt_value, opt_index) {
    return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dasha.sdk.IntentRecognitionV1, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.RecognitionResponseV1} returns this
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.clearIntentRecognitionsList = function () {
    return this.setIntentRecognitionsList([]);
};
/**
 * optional SentenceTypeRecognitionV1 sentence_type = 3;
 * @return {?proto.dasha.sdk.SentenceTypeRecognitionV1}
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.getSentenceType = function () {
    return /** @type{?proto.dasha.sdk.SentenceTypeRecognitionV1} */ (jspb.Message.getWrapperField(this, proto.dasha.sdk.SentenceTypeRecognitionV1, 3));
};
/**
 * @param {?proto.dasha.sdk.SentenceTypeRecognitionV1|undefined} value
 * @return {!proto.dasha.sdk.RecognitionResponseV1} returns this
*/
proto.dasha.sdk.RecognitionResponseV1.prototype.setSentenceType = function (value) {
    return jspb.Message.setWrapperField(this, 3, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.dasha.sdk.RecognitionResponseV1} returns this
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.clearSentenceType = function () {
    return this.setSentenceType(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dasha.sdk.RecognitionResponseV1.prototype.hasSentenceType = function () {
    return jspb.Message.getField(this, 3) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.SentenceTypeRecognitionV1.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.SentenceTypeRecognitionV1} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.SentenceTypeRecognitionV1.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getFieldWithDefault(msg, 1, ""),
            sentenceType: jspb.Message.getFieldWithDefault(msg, 2, ""),
            confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.SentenceTypeRecognitionV1}
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.SentenceTypeRecognitionV1;
    return proto.dasha.sdk.SentenceTypeRecognitionV1.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.SentenceTypeRecognitionV1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.SentenceTypeRecognitionV1}
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSentenceType(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setConfidence(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.SentenceTypeRecognitionV1.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.SentenceTypeRecognitionV1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getType();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSentenceType();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getConfidence();
    if (f !== 0.0) {
        writer.writeDouble(3, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.SentenceTypeRecognitionV1} returns this
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.setType = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string sentence_type = 2;
 * @return {string}
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.getSentenceType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.SentenceTypeRecognitionV1} returns this
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.setSentenceType = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional double confidence = 3;
 * @return {number}
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.getConfidence = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.SentenceTypeRecognitionV1} returns this
 */
proto.dasha.sdk.SentenceTypeRecognitionV1.prototype.setConfidence = function (value) {
    return jspb.Message.setProto3FloatField(this, 3, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.DataRecognitionV1.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.DataRecognitionV1.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.DataRecognitionV1} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.DataRecognitionV1.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getFieldWithDefault(msg, 1, ""),
            skill: jspb.Message.getFieldWithDefault(msg, 2, ""),
            dataName: jspb.Message.getFieldWithDefault(msg, 3, ""),
            dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : [],
            confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.DataRecognitionV1}
 */
proto.dasha.sdk.DataRecognitionV1.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.DataRecognitionV1;
    return proto.dasha.sdk.DataRecognitionV1.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.DataRecognitionV1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.DataRecognitionV1}
 */
proto.dasha.sdk.DataRecognitionV1.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSkill(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setDataName(value);
                break;
            case 4:
                var value = msg.getDataMap();
                reader.readMessage(value, function (message, reader) {
                    jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
                });
                break;
            case 5:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setConfidence(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.DataRecognitionV1.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.DataRecognitionV1.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.DataRecognitionV1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.DataRecognitionV1.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getType();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSkill();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getDataName();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getDataMap(true);
    if (f && f.getLength() > 0) {
        f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
    }
    f = message.getConfidence();
    if (f !== 0.0) {
        writer.writeDouble(5, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.dasha.sdk.DataRecognitionV1.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.DataRecognitionV1} returns this
 */
proto.dasha.sdk.DataRecognitionV1.prototype.setType = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string skill = 2;
 * @return {string}
 */
proto.dasha.sdk.DataRecognitionV1.prototype.getSkill = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.DataRecognitionV1} returns this
 */
proto.dasha.sdk.DataRecognitionV1.prototype.setSkill = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string data_name = 3;
 * @return {string}
 */
proto.dasha.sdk.DataRecognitionV1.prototype.getDataName = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.DataRecognitionV1} returns this
 */
proto.dasha.sdk.DataRecognitionV1.prototype.setDataName = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * map<string, string> data = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.dasha.sdk.DataRecognitionV1.prototype.getDataMap = function (opt_noLazyCreate) {
    return /** @type {!jspb.Map<string,string>} */ (jspb.Message.getMapField(this, 4, opt_noLazyCreate, null));
};
/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.dasha.sdk.DataRecognitionV1} returns this
 */
proto.dasha.sdk.DataRecognitionV1.prototype.clearDataMap = function () {
    this.getDataMap().clear();
    return this;
};
/**
 * optional double confidence = 5;
 * @return {number}
 */
proto.dasha.sdk.DataRecognitionV1.prototype.getConfidence = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.DataRecognitionV1} returns this
 */
proto.dasha.sdk.DataRecognitionV1.prototype.setConfidence = function (value) {
    return jspb.Message.setProto3FloatField(this, 5, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.IntentRecognitionV1.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.IntentRecognitionV1.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.IntentRecognitionV1} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.IntentRecognitionV1.toObject = function (includeInstance, msg) {
        var f, obj = {
            type: jspb.Message.getFieldWithDefault(msg, 1, ""),
            skill: jspb.Message.getFieldWithDefault(msg, 2, ""),
            state: jspb.Message.getFieldWithDefault(msg, 3, ""),
            sentenceType: jspb.Message.getFieldWithDefault(msg, 4, ""),
            intent: jspb.Message.getFieldWithDefault(msg, 5, ""),
            confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.IntentRecognitionV1}
 */
proto.dasha.sdk.IntentRecognitionV1.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.IntentRecognitionV1;
    return proto.dasha.sdk.IntentRecognitionV1.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.IntentRecognitionV1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.IntentRecognitionV1}
 */
proto.dasha.sdk.IntentRecognitionV1.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setType(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setSkill(value);
                break;
            case 3:
                var value = /** @type {string} */ (reader.readString());
                msg.setState(value);
                break;
            case 4:
                var value = /** @type {string} */ (reader.readString());
                msg.setSentenceType(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setIntent(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readDouble());
                msg.setConfidence(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.IntentRecognitionV1.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.IntentRecognitionV1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.IntentRecognitionV1.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getType();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
    f = message.getSkill();
    if (f.length > 0) {
        writer.writeString(2, f);
    }
    f = message.getState();
    if (f.length > 0) {
        writer.writeString(3, f);
    }
    f = message.getSentenceType();
    if (f.length > 0) {
        writer.writeString(4, f);
    }
    f = message.getIntent();
    if (f.length > 0) {
        writer.writeString(5, f);
    }
    f = message.getConfidence();
    if (f !== 0.0) {
        writer.writeDouble(6, f);
    }
};
/**
 * optional string type = 1;
 * @return {string}
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.getType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.IntentRecognitionV1} returns this
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.setType = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * optional string skill = 2;
 * @return {string}
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.getSkill = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.IntentRecognitionV1} returns this
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.setSkill = function (value) {
    return jspb.Message.setProto3StringField(this, 2, value);
};
/**
 * optional string state = 3;
 * @return {string}
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.getState = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.IntentRecognitionV1} returns this
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.setState = function (value) {
    return jspb.Message.setProto3StringField(this, 3, value);
};
/**
 * optional string sentence_type = 4;
 * @return {string}
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.getSentenceType = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.IntentRecognitionV1} returns this
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.setSentenceType = function (value) {
    return jspb.Message.setProto3StringField(this, 4, value);
};
/**
 * optional string intent = 5;
 * @return {string}
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.getIntent = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.IntentRecognitionV1} returns this
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.setIntent = function (value) {
    return jspb.Message.setProto3StringField(this, 5, value);
};
/**
 * optional double confidence = 6;
 * @return {number}
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.getConfidence = function () {
    return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};
/**
 * @param {number} value
 * @return {!proto.dasha.sdk.IntentRecognitionV1} returns this
 */
proto.dasha.sdk.IntentRecognitionV1.prototype.setConfidence = function (value) {
    return jspb.Message.setProto3FloatField(this, 6, value);
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.AvailableSkillsRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.AvailableSkillsRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.AvailableSkillsRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.AvailableSkillsRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            language: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.AvailableSkillsRequest}
 */
proto.dasha.sdk.AvailableSkillsRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.AvailableSkillsRequest;
    return proto.dasha.sdk.AvailableSkillsRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.AvailableSkillsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.AvailableSkillsRequest}
 */
proto.dasha.sdk.AvailableSkillsRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setLanguage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.AvailableSkillsRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.AvailableSkillsRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.AvailableSkillsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.AvailableSkillsRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getLanguage();
    if (f.length > 0) {
        writer.writeString(1, f);
    }
};
/**
 * optional string language = 1;
 * @return {string}
 */
proto.dasha.sdk.AvailableSkillsRequest.prototype.getLanguage = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.dasha.sdk.AvailableSkillsRequest} returns this
 */
proto.dasha.sdk.AvailableSkillsRequest.prototype.setLanguage = function (value) {
    return jspb.Message.setProto3StringField(this, 1, value);
};
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dasha.sdk.AvailableSkillsResponse.repeatedFields_ = [1];
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.dasha.sdk.AvailableSkillsResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.dasha.sdk.AvailableSkillsResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.dasha.sdk.AvailableSkillsResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.dasha.sdk.AvailableSkillsResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            availableSkillsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dasha.sdk.AvailableSkillsResponse}
 */
proto.dasha.sdk.AvailableSkillsResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.dasha.sdk.AvailableSkillsResponse;
    return proto.dasha.sdk.AvailableSkillsResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dasha.sdk.AvailableSkillsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dasha.sdk.AvailableSkillsResponse}
 */
proto.dasha.sdk.AvailableSkillsResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.addAvailableSkills(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dasha.sdk.AvailableSkillsResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.dasha.sdk.AvailableSkillsResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dasha.sdk.AvailableSkillsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dasha.sdk.AvailableSkillsResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAvailableSkillsList();
    if (f.length > 0) {
        writer.writeRepeatedString(1, f);
    }
};
/**
 * repeated string available_skills = 1;
 * @return {!Array<string>}
 */
proto.dasha.sdk.AvailableSkillsResponse.prototype.getAvailableSkillsList = function () {
    return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};
/**
 * @param {!Array<string>} value
 * @return {!proto.dasha.sdk.AvailableSkillsResponse} returns this
 */
proto.dasha.sdk.AvailableSkillsResponse.prototype.setAvailableSkillsList = function (value) {
    return jspb.Message.setField(this, 1, value || []);
};
/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dasha.sdk.AvailableSkillsResponse} returns this
 */
proto.dasha.sdk.AvailableSkillsResponse.prototype.addAvailableSkills = function (value, opt_index) {
    return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};
/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dasha.sdk.AvailableSkillsResponse} returns this
 */
proto.dasha.sdk.AvailableSkillsResponse.prototype.clearAvailableSkillsList = function () {
    return this.setAvailableSkillsList([]);
};
goog.object.extend(exports, proto.dasha.sdk);
//# sourceMappingURL=nlu-service_pb.js.map